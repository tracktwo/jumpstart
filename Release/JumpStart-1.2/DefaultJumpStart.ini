[JumpStart.JumpStart]

# Visit http://jumpstarter.tracktwo.net for a web app to assist in generating
# these ini files! No more typos or having to look up obscure enum values.

# Start date: Set these to adjust the start date of the campaign. The campaign
# officially still starts on 2016-03-01 (unless you also change the start date
# in the DefaultGameData.ini file) so the difference between the start date in
# DefaultGameData and this date will be the number of days already elapsed in
# the campaign and affects alien research, mission timing, etc.
#
# WARNING: Don't set this to a date earlier than the date in
# DefaultGameCore.ini or your game will be *very* screwed up.
# 
# Set all values to -1 to start at the default start date.

START_DAY=-1
START_MONTH=-1
START_YEAR=-1

# The number of days to wait from the start of the game until starting
# slingshot. Useful when using a modified start date to avoid a FiLP mission
# spawning right as you start the game. If set to a value other than -1, FiLP
# will not spawn until this number of days after your modified start date.
# Confounding light and Gangplank will start at the number of days after FiLP
# specified in DefaultGameData.ini, as normal.

SLINGSHOT_START_DAYS=-1

# The number of exalt clues to already have completed at the start of the game.
# Set to -1 for a standard game start with no clues and Exalt not yet active.
# Set to 0 for Exalt to begin active but no clues yet recovered (so you may
# begin scanning immediately), or some value > 1 to have that number of clues
# already acquired. The game begins as if you had just completed an exalt
# operation eliminating the last active cell, so several days (depending on
# exalt tuning) will pass before the first cell becomes active.
#
# Note: Portent is still active, unless you disabled it, so narrative-wise
# things may be out of order.

EXALT_CLUE_COUNT=7

# The number of random alien bases to add at the start of the game. This is
# applied after the "alienbase" lines are processed, and will only choose
# from countries that have not already left the project. Therefore combining
# this option with alienbase you can have both fixed and randomized countries
# start the game having already left the council.
#
# Setting this to a value >= 16 (when combined with alienbase) will immediately
# lose the game (and result in a weird graphics glitch).
RANDOM_BASES=-1

# Resources: Set these to the desired value to start with exactly that amount.
# Leave at -1 to receive the default amount for that resource.

CREDITS=-1
ALLOYS=-1
ELERIUM=-1
SCIENTISTS=-1
ENGINEERS=-1
MELD=-1
FRAGMENTS=-1

# Alien starting research/resources. Set to -1 to keep the default values, or
# assign some other value to set the start amount. Note that LW clamps some of
# these values (e.g. resources has a max of 300 and threat a max of 4). Alien
# research is the bonus research. Due to the use of -1 as a sentinel you can't
# set it to -1 even though negative bonus research is valid. The game begins as
# if a month had just ended - the monthly mission scheduling will occur using
# these values and these values will be re-adjusted as normal.

ALIEN_RESEARCH=0
ALIEN_RESOURCES=100
XCOM_THREAT=1

# research: add one line for each research project to have completed at game
# start. The list of IDs is in DefaultGameCore.ini under TechBalance.
# 
# syntax: research=<tech ID> 
# e.g.: research=eTech_LaserWeapons

research=eTech_LaserWeapons
research=eTech_Armor_ArchAngel
research=eTech_PsiLabs
research=eTech_Placeholder  ;alien biocybernetics

# foundry: add one line for each foundry project to have completed at game
# start. The list of IDs is in DefaultGameCore.ini under FoundryBalance.
#
# syntax: foundry=<project ID> 
# e.g.: foundry=eFoundry_AlienGrenades

foundry=eFoundry_AlienGrenades
foundry=eFoundry_AmmoConservation

# ots: add one line for each officer training school project to have completed
# at game start. The list of IDs is in DefaultGameCore.ini under OTSBalance,
# but most are unnamed in the .ini. These do not work well unless you have the
# facility built.
#
# The officer project IDs are 3-7, where 3 unlocks Lieutenants and 7 Field
# Commanders.
#
# syntax: ots=<project ID> 
# e.g.: ots=eOTS_SquadSize_I

ots=eOTS_SquadSize_I
ots=3

# facility: add one line for each facility to have completed at game start. The
# list of IDs is in DefaultGameCore.ini under FacilityBalance.
#
# syntax: facility=(iType=<facility ID>, X=<X coordinate>, Y=<Y coordinate>)
# e.g. facility=(iType=eFacility_Foundry, X=4, Y=1) places a foundry on the
# first level just right of the lift.
#
# NOTE: X coordinates are 0-based - 0 is the leftmost column, 6 the rightmost.
# But Y coordinates are 1-based,
# 1 is the top level, 4 is the bottom level. I don't know why this is either.
#
# Also note that some features don't work properly unless the corresponding
# facility exists in the base.  For example, you can provide OTS squad size
# upgrades, but they won't function properly without an OTS.  Mecs don't work
# properly without a repair facility.

facility=(iType=eFacility_Foundry, X=4, Y=1)
facility=(iType=eFacility_AlienContain, X=0, Y=2)
facility=(iType=eFacility_OTS, X=6, Y=4)
facility=(iType=eFacility_CyberneticsLab, X=1, Y=1)
facility=(iType=eFacility_SmallRadar, X=0, Y=1)
facility=(iType=eFacility_SmallRadar, X=2, Y=2)
facility=(iType=eFacility_AccessLift, X=3, Y=2)

# soldier: add one line for each customized soldier to have in your barracks at
# game start. Custom soldiers have not just ranks but also specific classes,
# PSI levels, and perks. IDs for perks can be found in DefaultGameCore.ini
# under SoldierPerkTrees. Ranks and class IDs are listed below. The
# class-defining perks are automatically granted when you pick the class (e.g.
# all gunners get suppression), you do not need to specify it again in the perk
# list.
#
# IMPORTANT: If you define any MECs, *make sure* you provide a repair facility
# somewhere in your base or the soldier view for any Mec soldiers will be
# bugged.
#
# syntax: soldier=(iClass=<class ID>, 
# iRank=<Rank ID>, 
# iPsiRank=<Psi rank>,
# iPerk=(<PerkId>, <PerkId>, ...), 
# iCountry=<country ID>, 
# iGender=<gender ID>,
# iHP=<hp>                              ; See notes about stats
# iAim=<aim>                            ; See notes about stats
# iWill=<will>                          ; See notes about stats
# iMobility=<mobility>                  ; See notes about stats
# iDefense=<defense>                    ; See notes about stats
# bAttribBonus=<true/false>             ; See notes about stats
# strFirstName=<first name>, strLastName=<last name>, strNickName=<nick name>,
# iRace=<race ID>,                           ; WARNING: See notes below
# iHead=<head ID>,                           ; WARNING: See notes below
# iHaircut=<hair ID>,                        ; WARNING: See notes below
# iHairColor=<hair color ID>,                
# iFacialHair=<facial hair ID>,              ; WARNING: See notes below 
# iSkinColor=<skin color>,                   ; WARNING: See notes below 
# iVoice=<voice ID>,                         ; WARNING: See notes below 
# iLanguage=<Language ID>,                   ; WARNING: See notes below 
# iArmorDeco=<armor deco ID>,                ; WARNING: See notes below 
# iArmorTint=<armor tint ID>) 
#
# e.g.: # soldier=(iClass=11, iRank=eRank_Colonel, iPsiRank=eRank_Operative,
# iPerk=(ePerk_SnapShot,ePerk_LowProfile)) 
#
# grants a MSGT sniper as a lvl-3  psion, and has the squadsight 
# (automatic class perk), snapshot, and low profile perks.  the remaining 
# perks for ranks up to MSGT are unlocked but not chosen, you can choose 
# them in game. Also note that if you assign psi ranks you may want to 
# assign psi perks instead of choosing them in game as they require both 
# an active psi lab and time to train.
#
#  WARNING: Appearance IDs start at 0 and count up, so the number to use here
#  is 1 less than the number you see in the appearance customization UI for
#  some settings. However, most of the appearance settings are dependant on
#  configuration files, available DLC, and other aspects of the character (e.g.
#  different values need to be used for the same setting for males and
#  females). These are very tricky to get right and are probably better
#  configured in-game, but you can use them if you know what you're doing.
#
# Stats: you can specify stat values for soldiers via the stat variables listed
# above (iHP, iAim, iWill, iMobility, iDefense, and bAttribBonus). These stat
# values behave differently depending on whether bAttribBonus is true (the default)
# or not. When bAttribBonus is true, a soldier's final stats are computed by the following:
#  
#   1. Start with initial stat values (random or not based on strict screening)
#   2. For each class-specific perk assigned (including the implicit class-defining perk if
#      you gave the soldier a class) add the "level up" stat bonus (the class stat progression)
#      and any stat bonuses specific to the perk chosen. This is only granted for perks in the
#      class tree for the soldier, other perks from outside the tree don't result in stat bonuses.
#   3. Add the values from the iHP, iAim, etc provided here.
#
# Effectively, when bAttribBonus is true, the stats work effectively exactly as if you had 
# levelled up a soldier from PFC in-game.
#
# When bAttribBonus is false, the stats are simply overwritten by the values provided in the stat
# variables on the soldier line: no levelup bonuses are applied from perks. This is useful to assign
# a soldier very specific stat values (e.g. to re-create a soldier exactly). Be sure to assign values
# for all stats when setting bAttribBonus to false otherwise the soldier will have very bad defaults
# (-1 hp is not good).
# 
# Ranks: eRank_Rookie, eRank_Squaddie, eRank_Corporal, eRank_Sergeant,
# eRank_Lieutenant, eRank_Captain, eRank_Major, eRank_Colonel
# 
# Psi Ranks: eRank_PsiLevel_None, eRank_Trainee, eRank_Specialist,
# eRank_Operative, eRank_Volunteer,
#
# Classes:
#  11 -> Sniper
#  21 -> Scout
#  12 -> Rocketeer
#  22 -> Gunner
#  13 -> Medic
#  23 -> Engineer
#  14 -> Assault
#  24 -> Infantry
#
# Mecs: 
#  31 -> Jaeger
#  41 -> Pathfinder
#  32 -> Archer
#  42 -> Goliath
#  33 -> Guardian
#  43 -> Shogun
#  34 -> Marauder
#  44 -> Valkyrie

soldier=(iClass=11, iRank=eRank_Colonel, iPsiRank=eRank_Operative, iPerk=(ePerk_SnapShot, ePerk_LowProfile), iCountry=eCountry_Canada, iGender=2)
soldier=(iClass=21, iRank=eRank_Major)
soldier=(iClass=12, iRank=eRank_Colonel, iPsiRank=1)
soldier=(iClass=22, iRank=eRank_Major)
soldier=(iClass=13, iRank=eRank_Colonel)
soldier=(iClass=23, iRank=eRank_Major)
soldier=(iClass=14, iRank=eRank_Colonel)
soldier=(iClass=24, iRank=eRank_Major)
soldier=(iClass=42, iRank=eRank_Sergeant, iCountry=eCountry_Japan, iGender=1)

# blanksoldier: Add additional "blank" soldiers to the barracks. Each line
# indicates the rank of soldiers to create and the number to add to the
# barracks, but does not assign a class or any perks. These soldiers are
# effectively like council reward soldiers, but you can specify the ranks. Use
# this to quickly fill out your barracks if you don't want to specify each
# soldier individually.
#
# syntax: blanksoldier=(iRank=<rank>, iCount=<count>) 
# e.g. blanksoldier=(iRank=eRank_Squaddie, iCount=10) to add 10 SPECs to the
# barracks.

blanksoldier=(iRank=eRank_Sergeant, iCount=10)
blanksoldier=(iRank=eRank_Squaddie, iCount=10)
blanksoldier=(iRank=eRank_Rookie, iCount=10)

# storage: Add the given amount of the given item to XCom stores. Each line 
# adds a particular kind of item.
#
# syntax: storage=(iType=<item type>, iCount=<count>)
# e.g. storage=(iType=eItem_ArmorCarapace, iCount=5) to add 5 carapace 
# armors to your store.

storage=(iType=eItem_ArmorCarapace, iCount=5)
storage=(iType=eItem_ExaltLaserAssaultRifle, iCount=3)
storage=(iType=eItem_MecArmor1)

# paniclevel: Set the initial panic level for countries. Each line sets the 
# panic for a single country. Amount should be between 0 and 99.
#
# syntax: paniclevel=(iCountry=<country>, iAmount=<amount>)
# e.g. paniclevel=(iCountry=eCountry_Japan, iAmount=14)

paniclevel=(iCountry=eCountry_USA, iAmount=10)
paniclevel=(iCountry=eCountry_Russia, iAmount=50)
paniclevel=(iCountry=eCountry_Japan, iAmount=99)

# satellite: Each line adds a satellite over a country. Sats begin the game 
# "active" but do not count toward the number of satellites built in the first 
# month for funding purposes.
#
# syntax: satellite=<country>
# e.g. satellite=eCountry_Canada

satellite=eCountry_Canada
satellite=eCountry_USA
satellite=eCountry_Mexico

# alienbase: Add an alien base in a country. May be specified more than once to
# create multiple alien bases.  These countries begin the game as withdrawn,
# but do not count toward the list of withdrawn countries for the month for
# funding purposes.
#
# syntax: alienbase=<country> 
# e.g. alienbase=eCountry_Egypt

alienbase=eCountry_Egypt
alienbase=eCountry_Australia

# airforce: Add one line per interceptor or firestorm to add to your fleet.
# Weapons equipped on the ship are "free" in that a copy of the weapon doesn't
# need to be available in storage, they're automatically created.  See
# DefaultGameCore for the IDs to use for different weapon types. If you specify
# any airforce lines, these will be the ONLY ships in your fleet. If you
# specify no airforce lines, you will keep the default game start fleet.
#
# syntax: airforce=(iContinent=<continent>, iWeapon=<weapon type>, iKills=<kill
#                   count>, bFirestorm=<true/false>) 
# e.g. airforce=(iContinent=eContinent_Asia, iWeapon=eItem_IntWeap_II, 
#                iKills=3, bFirestorm=false)

airforce=(iContinent=eContinent_NorthAmerica, iWeapon=116, bFirestorm=false)
airforce=(iContinent=eContinent_NorthAmerica, iWeapon=eItem_IntWeap_III, iKills=10, bFirestorm=true)
airforce=(iContinent=eContinent_NorthAmerica, iWeapon=eItem_IntWeap_I, iKills=5, bFirestorm=false)
airforce=(iContinent=eContinent_Asia)

